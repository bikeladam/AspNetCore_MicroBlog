{"version":3,"sources":["./AngularApp/$_lazy_route_resource lazy namespace object","./AngularApp/src/app/app-routing.module.ts","./AngularApp/src/app/app.component.scss","./AngularApp/src/app/app.component.ts","./AngularApp/src/app/app.module.ts","./AngularApp/src/app/blog-post-add-edit/blog-post-add-edit.component.scss","./AngularApp/src/app/blog-post-add-edit/blog-post-add-edit.component.ts","./AngularApp/src/app/blog-post/blog-post.component.scss","./AngularApp/src/app/blog-post/blog-post.component.ts","./AngularApp/src/app/blog-posts/blog-posts.component.scss","./AngularApp/src/app/blog-posts/blog-posts.component.ts","./AngularApp/src/app/services/blog-post.service.ts","./AngularApp/src/environments/environment.ts","./AngularApp/src/main.ts","./AngularApp/src/app/app.component.html","./AngularApp/src/app/blog-post-add-edit/blog-post-add-edit.component.html","./AngularApp/src/app/blog-post/blog-post.component.html","./AngularApp/src/app/blog-posts/blog-posts.component.html"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./AngularApp/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BlogPostsComponent } from './blog-posts/blog-posts.component';\r\nimport { BlogPostComponent } from './blog-post/blog-post.component';\r\nimport { BlogPostAddEditComponent } from './blog-post-add-edit/blog-post-add-edit.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: BlogPostsComponent, pathMatch: 'full' },\r\n  { path: 'blogpost/:id', component: BlogPostComponent },\r\n  { path: 'add', component: BlogPostAddEditComponent },\r\n  { path: 'blogpost/edit/:id', component: BlogPostAddEditComponent },\r\n  { path: '**', redirectTo: '/' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBbmd1bGFyQXBwL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'ClientApp';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BlogPostsComponent } from './blog-posts/blog-posts.component';\r\nimport { BlogPostComponent } from './blog-post/blog-post.component';\r\nimport { BlogPostAddEditComponent } from './blog-post-add-edit/blog-post-add-edit.component';\r\nimport { BlogPostService } from './services/blog-post.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BlogPostsComponent,\r\n    BlogPostComponent,\r\n    BlogPostAddEditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    BlogPostService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBbmd1bGFyQXBwL3NyYy9hcHAvYmxvZy1wb3N0LWFkZC1lZGl0L2Jsb2ctcG9zdC1hZGQtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BlogPostService } from '../services/blog-post.service';\r\nimport { BlogPost } from '../models/blogpost';\r\n\r\n@Component({\r\n  selector: 'app-blog-post-add-edit',\r\n  templateUrl: './blog-post-add-edit.component.html',\r\n  styleUrls: ['./blog-post-add-edit.component.scss']\r\n})\r\nexport class BlogPostAddEditComponent implements OnInit {\r\n  form: FormGroup;\r\n  actionType: string;\r\n  formTitle: string;\r\n  formBody: string;\r\n  postId: number;\r\n  errorMessage: any;\r\n  existingBlogPost: BlogPost;\r\n\r\n  constructor(private blogPostService: BlogPostService, private formBuilder: FormBuilder, private avRoute: ActivatedRoute, private router: Router) {\r\n    const idParam = 'id';\r\n    this.actionType = 'Add';\r\n    this.formTitle = 'title';\r\n    this.formBody = 'body';\r\n    if (this.avRoute.snapshot.params[idParam]) {\r\n      this.postId = this.avRoute.snapshot.params[idParam];\r\n    }\r\n\r\n    this.form = this.formBuilder.group(\r\n      {\r\n        postId: 0,\r\n        title: ['', [Validators.required]],\r\n        body: ['', [Validators.required]],\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.postId > 0) {\r\n      this.actionType = 'Edit';\r\n      this.blogPostService.getBlogPost(this.postId)\r\n        .subscribe(data => (\r\n          this.existingBlogPost = data,\r\n          this.form.controls[this.formTitle].setValue(data.title),\r\n          this.form.controls[this.formBody].setValue(data.body)\r\n        ));\r\n    }\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid) {\r\n      return;\r\n    }\r\n\r\n    if (this.actionType === 'Add') {\r\n      let blogPost: BlogPost = {\r\n        dt: new Date(),\r\n        creator: 'Martin',\r\n        title: this.form.get(this.formTitle).value,\r\n        body: this.form.get(this.formBody).value\r\n      };\r\n\r\n      this.blogPostService.saveBlogPost(blogPost)\r\n        .subscribe((data) => {\r\n          this.router.navigate(['/blogpost', data.postId]);\r\n        });\r\n    }\r\n\r\n    if (this.actionType === 'Edit') {\r\n      let blogPost: BlogPost = {\r\n        postId: this.existingBlogPost.postId,\r\n        dt: this.existingBlogPost.dt,\r\n        creator: this.existingBlogPost.creator,\r\n        title: this.form.get(this.formTitle).value,\r\n        body: this.form.get(this.formBody).value\r\n      };\r\n      this.blogPostService.updateBlogPost(blogPost.postId, blogPost)\r\n        .subscribe((data) => {\r\n          this.router.navigate([this.router.url]);\r\n        });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  get title() { return this.form.get(this.formTitle); }\r\n  get body() { return this.form.get(this.formBody); }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBbmd1bGFyQXBwL3NyYy9hcHAvYmxvZy1wb3N0L2Jsb2ctcG9zdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { BlogPostService } from '../services/blog-post.service';\r\nimport { BlogPost } from '../models/blogpost';\r\n\r\n@Component({\r\n  selector: 'app-blog-post',\r\n  templateUrl: './blog-post.component.html',\r\n  styleUrls: ['./blog-post.component.scss']\r\n})\r\nexport class BlogPostComponent implements OnInit {\r\n  blogPost$: Observable<BlogPost>;\r\n  postId: number;\r\n\r\n  constructor(private blogPostService: BlogPostService, private avRoute: ActivatedRoute) {\r\n    const idParam = 'id';\r\n    if (this.avRoute.snapshot.params[idParam]) {\r\n      this.postId = this.avRoute.snapshot.params[idParam];\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadBlogPost();\r\n  }\r\n\r\n  loadBlogPost() {\r\n    this.blogPost$ = this.blogPostService.getBlogPost(this.postId);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBbmd1bGFyQXBwL3NyYy9hcHAvYmxvZy1wb3N0cy9ibG9nLXBvc3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BlogPostService } from '../services/blog-post.service';\r\nimport { BlogPost } from '../models/blogpost';\r\n\r\n@Component({\r\n  selector: 'app-blog-posts',\r\n  templateUrl: './blog-posts.component.html',\r\n  styleUrls: ['./blog-posts.component.scss']\r\n})\r\nexport class BlogPostsComponent implements OnInit {\r\n  blogPosts$: Observable<BlogPost[]>;\r\n\r\n  constructor(private blogPostService: BlogPostService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadBlogPosts();\r\n  }\r\n\r\n  loadBlogPosts() {\r\n    this.blogPosts$ = this.blogPostService.getBlogPosts();\r\n  }\r\n\r\n  delete(postId) {\r\n    const ans = confirm('Do you want to delete blog post with id: ' + postId);\r\n    if (ans) {\r\n      this.blogPostService.deleteBlogPost(postId).subscribe((data) => {\r\n        this.loadBlogPosts();\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BlogPost } from '../models/blogpost';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlogPostService {\r\n\r\n  myAppUrl: string;\r\n  myApiUrl: string;\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json; charset=utf-8'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) {\r\n    this.myAppUrl = environment.appUrl;\r\n    this.myApiUrl = 'api/BlogPosts/';\r\n  }\r\n\r\n  getBlogPosts(): Observable<BlogPost[]> {\r\n    return this.http.get<BlogPost[]>(this.myAppUrl + this.myApiUrl)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandler)\r\n      );\r\n  }\r\n\r\n  getBlogPost(postId: number): Observable<BlogPost> {\r\n    return this.http.get<BlogPost>(this.myAppUrl + this.myApiUrl + postId)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandler)\r\n      );\r\n  }\r\n\r\n  saveBlogPost(blogPost): Observable<BlogPost> {\r\n    return this.http.post<BlogPost>(this.myAppUrl + this.myApiUrl, JSON.stringify(blogPost), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandler)\r\n      );\r\n  }\r\n\r\n  updateBlogPost(postId: number, blogPost): Observable<BlogPost> {\r\n    return this.http.put<BlogPost>(this.myAppUrl + this.myApiUrl + postId, JSON.stringify(blogPost), this.httpOptions)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandler)\r\n      );\r\n  }\r\n\r\n  deleteBlogPost(postId: number): Observable<BlogPost> {\r\n    return this.http.delete<BlogPost>(this.myAppUrl + this.myApiUrl + postId)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandler)\r\n      );\r\n  }\r\n\r\n  errorHandler(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  appUrl: 'https://localhost:44382/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-info\\\">Start</a>\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"<h1>{{actionType}} blog post</h1>\\r\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\" control-label col-md-12\\\">Title</label>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"title\\\">\\r\\n    </div>\\r\\n    <span class=\\\"text-danger ml-3\\\" *ngIf=\\\"title.invalid && formDir.submitted\\\">\\r\\n      Title is required.\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"control-label col-md-12\\\" for=\\\"Body\\\">Body text</label>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <textarea class=\\\"form-control\\\" rows=\\\"15\\\" formControlName=\\\"body\\\"></textarea>\\r\\n    </div>\\r\\n    <span class=\\\"text-danger ml-3\\\" *ngIf=\\\"body.invalid && formDir.submitted\\\">\\r\\n      Body is required.\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success float-right\\\">Save</button>\\r\\n    <button class=\\\"btn btn-secondary float-left\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"<ng-container *ngIf=\\\"(blogPost$ | async) as blogPost; else loading\\\">\\r\\n\\r\\n  <h1>{{ blogPost.title }}</h1>\\r\\n  <div>{{ blogPost.body }}</div>\\r\\n  <ul>\\r\\n    <li>{{ blogPost.creator }}</li>\\r\\n    <li>{{ blogPost.dt | date: \\\"dd.MM.y\\\" }}</li>\\r\\n  </ul>\\r\\n\\r\\n</ng-container>\\r\\n<ng-template #loading>Loading…</ng-template>\\r\\n\"","module.exports = \"<h1>Blog posts</h1>\\r\\n\\r\\n<p *ngIf=\\\"!(blogPosts$ | async)\\\"><em>Loading...</em></p>\\r\\n<p>\\r\\n  <a [routerLink]=\\\"['/add']\\\" class=\\\"btn btn-primary float-right mb-3\\\">New post</a>\\r\\n</p>\\r\\n\\r\\n<table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"(blogPosts$ | async)?.length>0\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>#</th>\\r\\n      <th>Title</th>\\r\\n      <th>Creator</th>\\r\\n      <th>Date</th>\\r\\n      <th></th>\\r\\n      <th></th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let blogPost of (blogPosts$ | async)\\\">\\r\\n      <td>{{ blogPost.postId }}</td>\\r\\n      <td><a [routerLink]=\\\"['/blogpost/', blogPost.postId]\\\">{{ blogPost.title }}</a></td>\\r\\n      <td>{{ blogPost.creator }}</td>\\r\\n      <td>{{ blogPost.dt | date: \\\"dd.MM.y\\\" }}</td>\\r\\n      <td><a [routerLink]=\\\"['/blogpost/edit/', blogPost.postId]\\\" class=\\\"btn btn-primary btn-sm float-right\\\">Edit</a>\\r\\n      </td>\\r\\n      <td><a [routerLink]=\\\"\\\" (click)=\\\"delete(blogPost.postId)\\\" class=\\\"btn btn-danger btn-sm float-right\\\">Delete</a></td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\""],"sourceRoot":""}